// 非同步：程式中包含「子程式」的時候


// 時間排程是一個「非同步的程式」

window.setTimeout(() => {//產生子程式
    // 兩秒後，「背景子程式」喚醒「主程式」執行
    alert("兩秒後執行");
}, 2000);
// 主程式設定排程後，立刻往下執行
alert("立刻被呼叫");
// 主程式結束，暫時沒事做

//執行流程： 建立子程式 → alert("立刻被呼叫"); → 兩秒後 →   alert("兩秒後執行");
// -------------------------------------------------------------------------------
// Ajax 預設是一個「非同步的程式」

let req = new XMLHttpRequest();
req.open("get", "data.txt");
req.onload = function () {
// 連線完成後，「背景子程式」觸發「主程式」的 load 事件處理函式
alert(this.responseText); //取得伺服器回應
};

// 主程式送出連線後，交由「背景子程式」負責處理連線細節
req.send();
// 主程式送出連線，立刻往下執行
alert("立刻被呼叫");
// 主程式結束，暫時沒事做

// --------------------------------------------------------------------------------
